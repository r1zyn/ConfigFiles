{
    "compilerOptions": {
        "incremental": true,                                 // Enable incremental compilation 
        "composite": false,                                  // Enable constraints that allow a TypeScript project to be used with project references. (enable for declaration files)
        "tsBuildInfoFile": "logs/.tsbuildinfo",              // Specify the folder for .tsbuildinfo incremental compilation files. 
        "target": "es6",                                     // Set the JavaScript language version for emitted JavaScript and include compatible library declarations. 
        "lib": [                                             // Specify a set of bundled library declaration files that describe the target runtime environment. 
            "ESNext",
            "ESNext.Array",
            "ESNext.AsyncIterable",
            "ESNext.Intl",
            "ESNext.Symbol",
            "DOM"
        ],                                                   
        "experimentalDecorators": true,                      // Enable experimental support for TC39 stage 2 draft decorators. 
        "emitDecoratorMetadata": true,                       // Emit design-type metadata for decorated declarations in source files. 
        "module": "CommonJS",                                // Specify what module code is generated.                                                  
        "rootDir": "./src",                                  // Specify the root folder within your source files. 
        "moduleResolution": "node",                          // Specify how TypeScript looks up a file from a given module specifier. 
        "baseUrl": "./",                                     // Specify the base directory to resolve non-relative module names. 
        "typeRoots": [                                       // Specify multiple folders that act like ./node_modules/@types.
            "./node_modules/@types"
        ],                                                   
        "allowUmdGlobalAccess": true,                        // Allow accessing UMD globals from modules. 
        "resolveJsonModule": true,                           // Enable importing .json files 
        "noResolve": false,                                  // Disallow `import`s, `require`s or `<reference>`s from expanding the number of files TypeScript should add to a project. 
        "allowJs": false,                                    // Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. 
        "checkJs": false,                                    // Enable error reporting in type-checked JavaScript files. 
        "declaration": true,                                 // Generate .d.ts files from TypeScript and JavaScript files in your project. 
        "declarationMap": true,                              // Create sourcemaps for d.ts files. 
        "emitDeclarationOnly": false,                        // Only output d.ts files and not JavaScript files. 
        "sourceMap": true,                                   // Create source map files for emitted JavaScript files.
        "outDir": "./build",                                 // Specify an output folder for all emitted files. 
        "declarationDir": "./typings",                       // Specify the output directory for generated declaration files. 
        "esModuleInterop": true,                             // Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility.       
        "forceConsistentCasingInFileNames": true,            // Ensure that casing is correct in imports. 
        "strict": true,                                      // Enable all strict type-checking options. 
        "noImplicitAny": false,                              // Enable error reporting for expressions and declarations with an implied `any` type.
        "strictNullChecks": true,                            // When type checking, take into account `null` and `undefined`. 
        "strictFunctionTypes": true,                         // When assigning functions, check to ensure parameters and the return values are subtype-compatible. 
        "strictBindCallApply": true,                         // Check that the arguments for `bind`, `call`, and `apply` methods match the original function. 
        "strictPropertyInitialization": false,               // Check for class properties that are declared but not set in the constructor. 
        "noImplicitThis": true,                              // Enable error reporting when `this` is given the type `any`. 
        "useUnknownInCatchVariables": false,                 // Type catch clause variables as 'unknown' instead of 'any'. 
        "alwaysStrict": true,                                // Ensure 'use strict' is always emitted. 
        "noUnusedLocals": true,                              // Enable error reporting when a local variables aren't read. 
        "noUnusedParameters": true,                          // Raise an error when a function parameter isn't read 
        "allowUnusedLabels": true,                           // Disable error reporting for unused labels. 
        "allowUnreachableCode": false,                       // Disable error reporting for unreachable code. 
        "skipLibCheck": true                                 // Skip type checking all .d.ts files.
    },
    "include": [
        "./src/**/*"
    ],
    "exclude": [
        "./.github/**/*",
        "./.idea/**/*",
        "./.vscode/**/*",
        "./build/**/*",
        "./logs/**/*",
        "./node_modules/**/*",
        "./typings/**/*",
        "**/*.js",
        "package.json"
    ],
    "ts-node": {
        "compilerOptions": {
            "module": "ESNext",
            "esModuleInterop": true
        },
    }
}